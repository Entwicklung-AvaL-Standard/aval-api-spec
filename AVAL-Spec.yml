swagger: "2.0"
info:
  description: |
    AvaL specification file.

    This specification contains descriptions for all AvaL related API operations.
    Furthermore any API implementer has to provide all of the mandatory functions of this spec file. Optional
    operations are indicated by HTTP response code 501. Optional attribute are not listed within the tag named
    'required'.

    The spec contains two types of AvaL matchings.
    * AvaL Matching (see definition _AvalMatching_) without contract information
    * AvaL __2__ Matching (see definition _Aval2Matching_) with contract information

    Your API must support at least AvaL Matchings, supporting AvaL 2 Matching is optional. All orders are processed
    via so-called AvaL Transactions (see definiton _AvalTransaction_), regardless of their matching type.

    API levels:
    * basic: The API supports handling of the AvaL Matching type
    * comfort: The API supports handling of __both__ AvaL Matching types
    * extended: _to be defined_

    Further information:
    * [AvaL Documents](https://www.avalstandard.de/download/dokumente) (written in German language)
    * [AvaL Organization on Github](https://github.com/Entwicklung-AvaL-Standard)

    Contact:
    * [Contact form](https://www.avalstandard.de/kontaktformular)
    * [Contact persons](https://www.avalstandard.de/kontakt/ansprechpartner)

  version: "1.0.0"
  title: "AvaL API specification"
  termsOfService: "https://www.avalstandard.de/impressum"
  contact:
    email: "entwicklung@avalstandard.de"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
  - name: "AvaL API"
    description: "AvaL API"
    externalDocs:
      description: "Find out more about AvaL"
      url: "https://www.avalstandard.de/"
schemes:
  - "https"
paths:
  /avalmatchings:
    post:
      tags:
        - "AvaL Matchings"
      summary: "Create a new AvaL Matching"
      description: ""
      operationId: "createAvalMatching"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "AvaL matching which should be created"
          required: true
          schema:
            $ref: "#/definitions/AvalMatching"
      responses:
        200:
          description: "Successful operation."
        400:
          description: "The provided AvaL Matching does not fulfill the specifications. Required parameters missing or provided AvaL state is invalid. Details may be included within the response body."
        409:
          description: "Provided AvaL Matching ID is already in use."
        500:
          description: "An unexpected error occurred. Details may be included within the response body."
  /avalmatchings/{avalId}:
    patch:
      tags:
        - "AvaL Matchings"
      summary: "Update an existing AvaL Matching"
      description: ""
      operationId: "updateAvalMatching"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "avalId"
          in: "path"
          description: "ID of AvaL Matching that needs to be updated"
          required: true
          type: "string"
          format: "uuid"
        - in: "body"
          name: "body"
          description: "AvaL Matching which should be updated."
          required: true
          schema:
            $ref: "#/definitions/AvalMatching"
      responses:
        200:
          description: "Successful operation."
        400:
          description: "Provided AvaL Matching ID of the request body does not correspond to the matching ID within the URI path."
        404:
          description: "AvaL Matching not found."
        405:
          description: "Validation exception because of incorrect state transition."
        500:
          description: "An unexpected error occurred. Details may be included within the response body."
  /aval2matchings:
    post:
      tags:
        - "AvaL 2 Matchings"
      summary: "Create a new AvaL 2 Matching"
      description: |
        For creating a new aval-matching beside for the required paramters according to Aval2Matching it is required to provide the following fields:
        * taskSite
        * groupId
        * period
        * service
        * cycleInterval
        * serviceUom
        * requiredDocuments
        * needServiceResponse
        * needPurchaseOrder
      operationId: "createAval2Matching"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "AvaL 2 Matching which should be created"
          required: true
          schema:
            $ref: "#/definitions/Aval2Matching"
      responses:
        200:
          description: "Successful operation."
        400:
          description: "The provided AvaL Matching does not fulfill the specifications. Required parameters missing or provided AvaL state is invalid. Details may be included within the response body."
        409:
          description: "Provided AvaL Matching ID is already in use."
        500:
          description: "An unexpected error occurred. Details may be included within the response body."
        501:
          description: "The processing of 'AvaL2Matching' entities is optional and not yet implemented for this API."
  /aval2matchings/{avalId}:
    patch:
      tags:
        - "AvaL 2 Matchings"
      summary: "Update an existing AvaL 2 Matching"
      description: ""
      operationId: "updateAval2Matching"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "avalId"
          in: "path"
          description: "ID of AvaL 2 Matching that needs to be updated"
          required: true
          type: "string"
          format: "uuid"
        - in: "body"
          name: "body"
          description: "AvaL 2 Matching which should be updated. It is only allowed to update the state and the end of the period of an existing Aval2Matching - in all other cases a new Aval2Matching needs to be performed"
          required: true
          schema:
            $ref: "#/definitions/Aval2Matching"
      responses:
        200:
          description: "Successful operation."
        400:
          description: "Provided AvaL 2 Matching ID of the request body does not correspond to the matching ID within the URI path."
        404:
          description: "AvaL 2 Matching not found."
        405:
          description: "Validation exception because of incorrect state transition."
        500:
          description: "An unexpected error occurred. Details may be included within the response body."
        501:
          description: "The processing of 'AvaL2Matching' entities is optional and not yet implemented for this API."
  /avalmatchings/{avalId}/avaltransactions:
    post:
      tags:
        - "AvaL Transactions"
      summary: "Transactions of an AvaL Matching (regardless of matching type)"
      description: ""
      operationId: "createAvalTransaction"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "avalId"
          in: "path"
          description: "ID of the AvaL Matching for the AvaL Transactions."
          required: true
          type: "string"
          format: "uuid"
        - in: "body"
          name: "body"
          description: "AvaL Transaction which should be created."
          required: true
          schema:
            $ref: "#/definitions/AvalTransaction"
      responses:
        200:
          description: "Successful operation."
        400:
          description: "The provided AvaL Transaction does not fulfill the specifications. This may happen because the related AvaL Matching is not in a corresponding state. Details may be included within the response body."
        409:
          description: "Provided AvaL Transaction ID is already in use."
        500:
          description: "An unexpected error occurred. Details may be included within the response body."
  /avalmatchings/{avalId}/avaltransactions/{transactionId}:
    patch:
      tags:
        - "AvaL Transactions"
      summary: "Update an existing AvaL Transaction"
      description: ""
      operationId: "updateAvalTransaction"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "avalId"
          in: "path"
          description: "ID of AvaL Matching which owns the AvaL Transaction"
          required: true
          type: "string"
          format: "uuid"
        - name: "transactionId"
          in: "path"
          description: "ID of AvaL Transaction which should be updated"
          required: true
          type: "string"
          format: "uuid"
        - in: "body"
          name: "body"
          description: "AvaL Transaction which should be updated."
          required: true
          schema:
            $ref: "#/definitions/AvalTransaction"
      responses:
        200:
          description: "Successful operation."
        400:
          description: "Invalid state (wrong number), missing attributes or something else."
        404:
          description: "AvaL Transaction not found."
        405:
          description: "Validation exception because of incorrect state transition."
        422:
          description: "The provided transaction is valid in content, but was rejected by the receiving API. One of the reasons for this may be that the underlying ERP system has refused to execute or continue the transaction."
        500:
          description: "An unexpected error occurred. Details may be included within the response body."
  /avalmatchings/{avalId}/avaltransactions/{transactionId}/avaldocuments:
    post:
      tags:
        - "AvaL Documents"
      summary: "Add a document to an existing AvaL Transaction"
      description: "See https://tools.ietf.org/html/rfc7578 for further information about the multipart content type."
      operationId: "postAvalDocument"
      consumes:
        - "multipart/form-data"
      parameters:
        - name: "avalId"
          in: "path"
          description: "ID of AvaL Matching which owns the AvaL Transaction"
          required: true
          type: "string"
          format: "uuid"
        - name: "transactionId"
          in: "path"
          description: "ID of AvaL Transaction which should be updated"
          required: true
          type: "string"
          format: "uuid"
        - in: "formData"
          name: "documentId"
          type: "string"
          format: "uuid"
          required: true
        - in: "formData"
          name: "filename"
          type: "string"
          required: true
          description: "The full filename including any file ending / extension"
        - in: "formData"
          name: "documentType"
          type: "string"
          required: true
          description: "Only IDs from AvaL document type reference list are allowed here (e.g. 'AD.1.101' for 'Leistungsschein'). See https://www.avalstandard.de/aval-stammdaten-webapi/catalog for more information."
        - in: "formData"
          name: "file"
          type: "file"
          required: true
      responses:
        200:
          description: "Document successfully uploaded."
        400:
          description: "The provided AvaL Document does not fulfill the specifications. Details may be included within the response body."
        409:
          description: "Provided AvaL Document ID is already in use."
        500:
          description: "An unexpected error occurred. Details may be included within the response body."
  /info:
    get:
      tags:
        - "AvaL API information"
      summary: "Provides information about this specific API implementation"
      operationId: "getInfo"
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: "Successfully retrieved information."
          schema:
            $ref: '#/definitions/ApiInformation'
        500:
          description: "An unexpected error occurred. Details may be included within the response body."
definitions:
  AvalMatching:
    type: "object"
    required:
      - id
      - state
    properties:
      id:
        type: "string"
        format: "uuid"
      state:
        type: "integer"
        format: "int32"
        example: 1
      client:
        $ref: "#/definitions/Client"
      supplier:
        $ref: "#/definitions/Supplier"
      extendedInformation:
        type: object
        additionalProperties:
          $ref: '#/definitions/AdditionalContent'
  Client:
    type: object
    properties:
      contractPartner:
        type: "string"
      material:
        type: "string"
        example: "Papier"
      containerType:
        type: "string"
        example: "MGB 1100 cbm"
      serviceType:
        type: "string"
        example: "Austausch"
      performancePlace:
        type: "string"
        example: "Musterstraße 43, 22041 Hamburg"
      materialUnit:
        type: "string"
        example: "to"
      serviceUnit:
        type: "string"
        example: "S"
      cycleInformation:
        type: "boolean"
        description: |
          Indicates if this specific matching is bound to a cycle. If it is (=true), please use the attribute _cycleRythm_
          for details on how often the job should be done.
        example: true
      cycleRhythm:
        type: "string"
        description: |
          Describes the cycle for this AvaL Matching. Use free-text or free-text in combination with a AvaL reference list ID
          from here https://www.avalstandard.de/aval-stammdaten-webapi/catalog/AZ.1/entries. Please use the following
          pattern if referencing to the AvaL list: _freetext#avalid_. Be aware that the handling of the ID is always optional.
          There is no garantuee that it will be handled by the API.
        example: "'Jede 2. Woche' or 'Jede 2. Woche#AZ.20.2.2.1'"
  Supplier:
    type: "object"
    properties:
      contractPartner:
        type: "string"
        example: "Mustermann GmbH"
      material:
        type: "string"
        example: "Papier"
      containerType:
        type: "string"
        example: "MGB 1100 cbm"
      serviceType:
        type: "string"
        example: "Austausch"
      performancePlace:
        type: "string"
        example: "Musterstr. 43, D-22041 Hamburg"
      materialUnit:
        type: "string"
        example: "to"
      serviceUnit:
        type: "string"
        example: "S"
      cycleInformation:
        type: "boolean"
        description: |
          Indicates if this specific matching is bound to a cycle. If it is (=true), please use the attribute _cycleRythm_
          for details on how often the job should be done.
        example: true
      cycleRhythm:
        type: "string"
        description: |
          Describes the cycle for this AvaL Matching. Use free-text or free-text in combination with a AvaL reference list ID
          from here https://www.avalstandard.de/aval-stammdaten-webapi/catalog/AZ.1/entries. Please use the following
          pattern if referencing to the AvaL list: _freetext#avalid_. Be aware that the handling of the ID is always optional.
          There is no garantuee that it will be handled by the API.
        example: "'Jede 2. Woche' or 'Jede 2. Woche#AZ.20.2.2.1'"
  Aval2Matching:
    type: "object"
    required:
      - id
      - state
    properties:
      id:
        type: "string"
        format: "uuid"
      state:
        type: "string"
        enum: [ NEW, ACCEPTED, REJECTED, ENDED ]
        example: "NEW"
      taskSite:
        # Leistungsort/Anfallstelle
        $ref: "#/definitions/Site"
      custSite:
        # Customer(group) for the taskSite
        $ref: "#/definitions/Site"
      billSite:
        # Invoice to
        $ref: "#/definitions/Site"
      disposalSite:
        # Location to deliver material to
        $ref: "#/definitions/Site"
      baseContract:
        type: "string"
        example: "HORNBACH"
        description: "As agreed upon in a base contract, may define conditions/prices/..."
      groupId:
        type: "string"
        format: "uuid"
        description: "allows for grouping of aval-ids,e.g. provisioning, rent, disposal or decomission"
      period:
        $ref: "#/definitions/Period"
      service:
        type: "string"
        example: "AL.1.13.19.0"
        description: "AvaL-ID of the service"
      serviceUom:
        type: "string"
        example: "AE.1.400"
        description: "AvaL-ID of the UOM (example: pieces)"
      material:
        type: "string"
        example: "AS.1.91.150106.0.0"
        description: "AvaL-ID of the material"
      materialUom:
        type: "string"
        example: "AE.1.103"
        description: "AvaL-ID of the UOM (example: tons)"
      container:
        type: "string"
        example: "AB.1.11.2500.0"
        description: "AvaL-ID of the container"
      containerAmount:
        type: "integer"
        format: "int32"
        example: 2
      cycleInterval:
        type: "string"
        description: "Only AvaL IDs from https://www.avalstandard.de/aval-stammdaten-webapi/catalog/AZ.1/entries are allowed here."
        example: "AZ.1.02.0.0.0"
      cyclePeriod:
        $ref: "#/definitions/Period"
      requiredDocuments:
        type: "array"
        description: "document types as Defined in AvalDocuments/fileType"
        items:
          type: "integer"
          format: "int32"
      gracePeriod:
        type: "integer"
        example: "5"
        description: "time for execution in working days after sending AvalTransaction or number of (working) days before rent payment starts. Can be omitted if there is a baseContract"
      needServiceResponse:
        type: "boolean"
        example: "true"
        description: "is sending back a Service Response (Rückmeldung, status=9/10) required?"
      needPurchaseOrder:
        type: "boolean"
        example: "true"
        description: "is there a 'Beauftragung' by the AG?"
      priceReference:
        type: "string"
        example: "SERVICE"
        enum: [ SERVICE, MATERIAL, CONTAINER, FLAT ]
      price:
        type: "number"
        description: "price in priceCurrency per priceReference"
      priceCurrency:
        type: "string"
        example: "EUR"
        description: "currency code according to ISO 4217 (3 letter)"
      logisticComment:
        type: "string"
        example: "Wenn Tor verschlossen: 777 anrufen"
        description: "comment for logistic special-handling"
      extendedInformation:
        type: object
        additionalProperties:
          $ref: '#/definitions/AdditionalContent'
  Site:
    type: "object"
    required:
      - name
      - street
      - postalCode
      - city
      - country
      - referenceSource
      - siteReference
    properties:
      name:
        type: "string"
        example: "Mustermann GmbH"
      street:
        type: "string"
        example: "Stollwerckstr. 9"
      postalCode:
        type: "string"
        example: "50996"
      city:
        type: "string"
        example: "Köln"
      country:
        type: "string"
        example: "DE"
        description: "2 Character ISO Code"
      siteDescription:
        type: "string"
        example: "Tor 2"
      geoLongitude:
        type: "number"
        format: "float"
        minimum: -180
        maximum: 180
        description: "Geo-Cordinate for longitude in WGS84 reference system in decimal degree (DDD.DDDDD°)"
      geoLatitude:
        type: "number"
        format: "float"
        minimum: -90
        maximum: 90
        description: "Geo-Cordinate for latitude in WGS84 reference system in decimal degree (DDD.DDDDD°)"
      governmentNumber:
        type: "string"
        description: "In Germany: EANV"
      referenceSource:
        type: "string"
        enum: [ GLN, AVAL, SENDER ]
        example: "SENDER"
      siteReference:
        type: "string"
        example: "244377"
        description: "reference number according to the referenceSource; if SENDER=internal to the sending system, for the receiver to lookup in a sender-specific lookup table. For AVAL/EANV/GLN to be further detailed"
  AvalTransaction:
    type: "object"
    required:
      - id
      - state
    properties:
      id:
        type: "string"
        format: "uuid"
      state:
        type: "integer"
        format: "int32"
        maximum: 10
        minimum: 1
        example: 1
      avalId:
        type: "string"
        format: "uuid"
      operationPeriod:
        $ref: '#/definitions/Period'
      fulfillmentTimestamp:
        type: "string"
        format: "date-time"
      plannedFulfillmentPeriod:
        $ref: '#/definitions/Period'
      serviceAmount:
        type: "integer"
        format: "int32"
        example: 1
      containerAmount:
        type: "integer"
        format: "int32"
        example: 2
      materialAmount:
        type: "number"
        format: "double"
        example: 0.256
      isUnderMeasureThreshold:
        type: "boolean"
        example: false
      serviceNoteNumber:
        type: "string"
        example: "DL-4711"
      measureNoteNumber:
        type: "string"
        example: "WS-0815"
      governmentalAssetNumber:
        type: "string"
      governmentalCarrierNumber:
        type: "string"
      orderNumberSupplier:
        type: "string"
        example: "LFS_123456"
      orderNumberClient:
        type: "string"
        example: "ERP_987654"
      logisticComments:
        type: "string"
        example: "Bitte hinter dem Gebäude herum fahren!"
      cancellationReason:
        type: "string"
        example: "Tor verschlossen"
      complaintReason:
        type: "string"
        description: "Only AvaL IDs from https://www.avalstandard.de/aval-stammdaten-webapi/catalog/AV.1/entries are allowed here."
        example: "AV.1.104"
      variationNotes:
        type: "string"
      alternateAvalId:
        type: "string"
        format: "uuid"
      alternateMatchedAvalId:
        type: "string"
        format: "uuid"
      extendedInformation:
        type: object
        additionalProperties:
          $ref: '#/definitions/AdditionalContent'
  Period:
    type: "object"
    properties:
      start:
        type: "string"
        format: "date-time"
        example: "2019-07-01T14:00:00Z"
      end:
        type: "string"
        format: "date-time"
        example: "2019-07-01T18:00:00Z"
  AdditionalContent:
    type: "object"
    properties:
      type:
        type: "string"
        example: "Behälternummer"
      content:
        type: "string"
        example: "A 123 987 456"
  ApiInformation:
    type: "object"
    required:
      - level
    properties:
      level:
        type: "string"
        enum: [ basic, comfort, extended ]
        description: |
          The level defines the supported AvaL function level (German: AvaL Standard Stufe) as defined
          at [www.avalstandard.de](https://www.avalstandard.de/services/auftrags-leistungsdaten).
          - _basic_: Report the provisioning of services for existing orders. Use the 'AvalMatching' while supporting the level 'basic'.
          - _comfort_: Functionality as in 'basic' with additional use of master data catalogs for the identification of containers, wastes, etc. Use the 'Aval2Matching' type if your API supports the level 'comfort'.
          - _extended_: Functionality as in 'comfort' with additional use of partner management including authentication.
        example: "basic"
      vendorVersion:
        type: "string"
        description: "This attribute contains the version of your API. This may be useful for monitoring or debugging purpose."
        example: "21.2.4"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
